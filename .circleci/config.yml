version: 2
jobs:
  build:
    parallelism: 3
    docker:
      - image: circleci/ruby:2.4.2-jessie-node
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          PGHOST: 127.0.0.1
          PGUSER: circleci-demo-ruby
          RAILS_ENV: test

      - image: circleci/postgres:9.6.3-alpine
        environment:
          POSTGRES_USER: ubuntu
          POSTGRES_DB: circle_ruby_test
      
      - image: redis

    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
      DATABASE_URL: postgres://ubuntu:@127.0.0.1:5432/circle_ruby_test
      CODECLIMATE_REPO_TOKEN: 7fa3492e65040bd42e0bf66ef86d6aea90eeda4f65e0e77c83abd0447177d27e
      CC_TEST_REPORTER_ID: 7fa3492e65040bd42e0bf66ef86d6aea90eeda4f65e0e77c83abd0447177d27e
    
    steps:
      - checkout
      - run: sudo apt-get update
      - run: sudo apt-get install postgresql-client-9.6 postgresql-contrib-9.6

      # Restore bundle cache
      - restore_cache:
          keys:
            - rails-demo-{{ checksum "Gemfile.lock" }}
            - rails-demo-

      # Bundle install dependencies
      - run:
          name: Install dependencies
          command: bundle check --path=vendor/bundle || bundle install --path=vendor/bundle --jobs 4 --retry 3

      # Store bundle cache
      - save_cache:
          key: rails-demo-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          name: Waiting for PostgreSQL to start
          command: |
            for i in `seq 1 10`;
            do
              nc -z localhost 5432 && echo Success && exit 0
              echo -n .
              sleep 2
            done
            echo Failed waiting for Postgres && exit 1

      - run:
          name: Database Setup
          command: |
            bundle exec rake db:schema:load

      - run: createdb -U postgres -h localhost -p 5432 other_database
      # Run test
      - run:
          name: Run test
          command: |
            bundle exec rake test

      # Save test results for timing analysis
      - store_test_results:
          path: test_results
